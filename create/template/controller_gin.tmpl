package main

import (
	"strconv"

	"github.com/gin-gonic/gin"
)

func init() {
	ops = append(ops, add{{.Name}})
}
func add{{.Name}}(e *gin.Engine) {
	apiV1 := e.Group("/api/v1")
	apiV1.GET("/{{.LowName}}s/:id", get{{.Name}})
	apiV1.GET("/{{.LowName}}s", gets{{.Name}})
	apiV1.PUT("/{{.LowName}}s/:id", put{{.Name}})
	apiV1.POST("/{{.LowName}}s", post{{.Name}})
	apiV1.DELETE("/{{.LowName}}s/:id", del{{.Name}})
}
func get{{.Name}}(c *gin.Context) {
	id, _ := strconv.ParseInt(c.Param("id"), 10, 64)
	{{.ShortName}} := &{{.Name}}{ID: id}
	if err := {{.ShortName}}.get(); err != nil {
		c.JSON(200, NewRespFault("获取{{.LowName}}失败："+err.Error()))
		return
	}
	c.JSON(200, NewRespWithData(200, "获取{{.LowName}}成功", {{.ShortName}}))
}
func gets{{.Name}}(c *gin.Context) {
	{{.ShortName}} := new({{.Name}})
	limit, _ := strconv.Atoi(c.Query("limit"))
	page, _ := strconv.Atoi(c.Query("page"))
	{{.ShortName}}s, count := {{.ShortName}}.gets(limit, page)
	c.JSON(200, NewRespWithCount(200, "获取{{.LowName}}列表成功", {{.ShortName}}s, count))
}
func post{{.Name}}(c *gin.Context) {
	{{.ShortName}} := &{{.Name}}{}
	if err := c.Bind({{.ShortName}}); err != nil {
		c.JSON(200, NewRespBad("参数失败:"+err.Error()))
		return
	}
	if err := {{.ShortName}}.update(); err != nil {
		c.JSON(200, NewRespFault("创建{{.LowName}}失败:"+err.Error()))
		return
	}
	c.JSON(200, NewRespOK("创建{{.LowName}}成功"))
}
func put{{.Name}}(c *gin.Context) {
	id, _ := strconv.ParseInt(c.Param("id"), 10, 64)
	{{.ShortName}} := &{{.Name}}{ID: id}
	if err := c.Bind({{.ShortName}}); err != nil {
		c.JSON(200, NewRespBad("参数失败:"+err.Error()))
		return
	}
	if err := {{.ShortName}}.update(); err != nil {
		c.JSON(200, NewRespFault("更新{{.LowName}}失败:"+err.Error()))
		return
	}
	c.JSON(200, NewRespOK("更新{{.LowName}}成功"))
}
func del{{.Name}}(c *gin.Context) {
	id, _ := strconv.ParseInt(c.Param("id"), 10, 64)
	{{.ShortName}} := &{{.Name}}{ID: id}
	if err := {{.ShortName}}.delete(); err != nil {
		c.JSON(200, NewRespFault("删除{{.LowName}}失败:"+err.Error()))
		return
	}
	c.JSON(200, NewRespOK("删除{{.LowName}}成功"))
}
